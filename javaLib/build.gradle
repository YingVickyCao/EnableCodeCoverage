apply plugin: 'java-library'
//apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'kotlin'
//apply plugin: 'kotlin-kapt'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation 'junit:junit:4.12'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

test {
    jacoco {
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        classDumpDir = file("$buildDir/jacoco/classpathdumps")
    }
}

//jacocoTestReport {
//    reports {
//        xml.enabled true    // default = false
////        csv.enabled true
//        html.enabled true // default = true
//    }
//
//}

jacocoTestReport {
    reports {
        xml.enabled true    // default = false
//        csv.enabled true
        html.enabled true // default = true
    }

    def sourceDirectories_java = "${project.projectDir}/src/main/java"
    def executionData_includes = ["$buildDir/jacoco/jacocoTest.exec"]

    def classDirectories_excludes = ['**/R.class',
                                     '**/R$*.class',
                                     '**/BuildConfig.*',
                                     '**/Manifest*.*',
                                     '**/Lambda$*.class',
                                     '**/Lambda.class',
                                     '**/*Lambda.class',
                                     '**/*Lambda*.class',
                                     '**/*Test*.*',
                                     '**/*$ViewBinder*.*',
                                     '**/*$ViewInjector*.*',
                                     'android/**/*.*',
                                     '**/*Activity.*',
                                     '**/*Fragment.*']

    def classDirectories_java = fileTree(dir: "${buildDir}/classes/java", excludes: classDirectories_excludes);
    def classDirectories_kotlin = fileTree(dir: "${buildDir}/classes/kotlin", excludes: classDirectories_excludes);

    classDirectories = files([classDirectories_java, classDirectories_kotlin])
    sourceDirectories = files([sourceDirectories_java])
//    additionalSourceDirs = files([sourceDirectories_java]) // add pre/after, no changes
    executionData = files(executionData_includes)  // raw coverage data file
}

plugins.withType(JacocoPlugin) {
    tasks['test'].finalizedBy 'jacocoTestReport'
}